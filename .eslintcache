[{"/home/donato/developer/find-flight/src/reportWebVitals.js":"1","/home/donato/developer/find-flight/src/config.js":"2","/home/donato/developer/find-flight/src/Components/SetFlightsForm/index.js":"3","/home/donato/developer/find-flight/src/App.js":"4","/home/donato/developer/find-flight/src/Components/MySpinner/index.js":"5","/home/donato/developer/find-flight/src/Components/DisplayInfo/index.js":"6","/home/donato/developer/find-flight/src/index.js":"7"},{"size":362,"mtime":1610703485775,"results":"8","hashOfConfig":"9"},{"size":161,"mtime":1610703485775,"results":"10","hashOfConfig":"9"},{"size":5453,"mtime":1610729099804,"results":"11","hashOfConfig":"9"},{"size":4854,"mtime":1610722523827,"results":"12","hashOfConfig":"9"},{"size":487,"mtime":1610710012361,"results":"13","hashOfConfig":"9"},{"size":559,"mtime":1610719905452,"results":"14","hashOfConfig":"9"},{"size":500,"mtime":1610703485775,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18801v4",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/donato/developer/find-flight/src/reportWebVitals.js",[],"/home/donato/developer/find-flight/src/config.js",[],"/home/donato/developer/find-flight/src/Components/SetFlightsForm/index.js",[],"/home/donato/developer/find-flight/src/App.js",["31"],"/*\n *\n */\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport SetFlightsForm from \"./Components/SetFlightsForm\";\nimport MySpinner from \"./Components/MySpinner\";\nimport DisplayInfo from \"./Components/DisplayInfo\";\nimport config from \"./config\";\n/*\n *\n */\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [appData, setAppData] = useState({\n    price: \"\",\n    airline: \"\",\n    show: false,\n    variant: null,\n    airportData: [],\n  });\n  const { price, airline, show, variant, airportData } = appData;\n  /*\n   *\n   */\n  const closeDisplayInfo = () => {\n    setAppData({ ...appData, show: false });\n  };\n  /**\n   * trova i dati relativi al volo piu economico\n   * @param {*} departureAirport\n   * @param {*} arrivalAirport\n   */\n  const getBestFlightData = async (departureAirport, arrivalAirport) => {\n    let httpConfig = {\n      method: \"get\",\n      url: `${config.url}flights/from/${departureAirport}/to/${arrivalAirport}`,\n      headers: { Authorization: `Bearer ${config.token}` },\n    };\n    let flightsData = null;\n    try {\n      flightsData = await axios.request({ ...httpConfig });\n    } catch (error) {\n      console.log(error);\n      setAppData({ ...appData, variant: \"danger\", show: true });\n      setLoading((loading) => !loading);\n      return;\n    }\n    console.log(\"App - findFlight\", flightsData);\n    const flightsList = flightsData?.data?.data;\n    console.log(flightsList);\n    let bestFlight = null;\n    if (flightsList.length > 1) {\n      bestFlight = flightsList.reduce((prev, curr) =>\n        prev.price < curr.price ? prev : curr\n      );\n    } else {\n      bestFlight = flightsList[0];\n    }\n    return bestFlight;\n  };\n  /**\n   *   trova il nome delle compagnia aerea che effettua il\n   *   volo piu economico\n   * @param {*} bestFlight\n   */\n  const getAirline = async (bestFlight) => {\n    let httpConfig = {\n      method: \"get\",\n      url: `${config.url}airlines/all`,\n      headers: { Authorization: `Bearer ${config.token}` },\n    };\n    let airlinesListResponse = null;\n    try {\n      airlinesListResponse = await axios.request({ ...httpConfig });\n    } catch (error) {\n      console.log(error);\n      setAppData({ ...appData, variant: \"danger\", show: true });\n      return;\n    }\n    console.log(airlinesListResponse);\n    const airlinesList = airlinesListResponse?.data?.data;\n    console.log(\">>>>>>>>>>>>>>>>>>>>>>>>\", airlinesList);\n    const airlineObj = airlinesList.find(\n      (airline) => airline.id === bestFlight.airlineId\n    );\n    console.log(\"airlineObj\", airlineObj);\n    return airlineObj;\n  };\n  /*\n   * trova il volo piu economico\n   */\n  const findFlight = async ({ departureAirport, arrivalAirport }) => {\n    console.log(\"App - findFlight\", loading);\n    if (show) {\n      setAppData({ ...appData, show: false });\n    }\n    setLoading((loading) => !loading);\n    const bestFlight = await getBestFlightData(\n      departureAirport,\n      arrivalAirport\n    );\n    const airline = await getAirline(bestFlight);\n    if (airline) {\n      let finalData = {\n        airline: airline.name,\n        price: bestFlight.price,\n        variant: \"dark\",\n        show: true,\n      };\n      setAppData({ ...appData, ...finalData });\n    }\n    setLoading((loading) => !loading);\n  };\n  /*\n   *\n   */\n  useEffect(() => {\n    console.log(\"App - useEffect\", loading);\n  }, [loading]);\n  /*\n   *\n   */\n  useEffect(() => {\n    console.log(\"App - useEffect miglior volo\", appData);\n  }, [appData]);\n  /*\n   * fetch IATA Airport\n   */\n  useEffect(() => {\n    const getAirport = async () => {\n      setLoading((loading) => !loading);\n      let httpConfig = {\n        method: \"get\",\n        url: `${config.url}airports/all`,\n        headers: { Authorization: `Bearer ${config.token}` },\n      };\n      let httpResp = null;\n      try {\n        httpResp = await axios.request({ ...httpConfig });\n        let airportListObj = httpResp?.data?.data;\n        setAppData({ ...appData, airportData: [...airportListObj] });\n        setLoading((loading) => !loading);\n      } catch (error) {\n        console.log(error);\n        setAppData({ ...appData, variant: \"danger\", show: true });\n        setLoading((loading) => !loading);\n        return;\n      }\n    };\n    const wrapper = async () => {\n      await getAirport();\n    };\n    wrapper();\n  }, []);\n  /**\n   *\n   */\n  return (\n    <div className=\"App\">\n      <SetFlightsForm\n        airportData={airportData}\n        loading={loading}\n        findFlight={findFlight}\n        closeDisplayInfo={closeDisplayInfo}\n      />\n      {show ? (\n        <DisplayInfo\n          variant={variant}\n          price={price}\n          airline={airline}\n          errorMsg=\"Sorry, something went wrong...\"\n        />\n      ) : null}\n\n      {loading ? <MySpinner /> : null}\n    </div>\n  );\n};\n/*\n *\n */\nexport default App;\n","/home/donato/developer/find-flight/src/Components/MySpinner/index.js",[],"/home/donato/developer/find-flight/src/Components/DisplayInfo/index.js",[],"/home/donato/developer/find-flight/src/index.js",[],{"ruleId":"32","severity":1,"message":"33","line":156,"column":6,"nodeType":"34","endLine":156,"endColumn":8,"suggestions":"35"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'appData'. Either include it or remove the dependency array. You can also do a functional update 'setAppData(a => ...)' if you only need 'appData' in the 'setAppData' call.","ArrayExpression",["36"],{"desc":"37","fix":"38"},"Update the dependencies array to be: [appData]",{"range":"39","text":"40"},[4343,4345],"[appData]"]